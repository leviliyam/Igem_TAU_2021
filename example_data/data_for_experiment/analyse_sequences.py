import pandas
from Bio import SeqIO
from modules.ORF.calculating_cai import relative_adaptiveness
from modules.shared_functions_and_vars import translate
import pandas as pd
from collections import Counter


b_wo_exp = {'TTT': 1.0, 'TTC': 0.5510688836104513, 'TTA': 0.67003367003367, 'TTG': 0.5600448933782267, 'TCT': 1.0, 'TCC': 0.4233576642335767, 'TCA': 0.8138686131386861, 'TCG': 0.35948905109489054, 'TAT': 1.0, 'TAC': 0.6556390977443609, 'TGT': 0.7608695652173914, 'TGC': 1.0, 'TGG': 1.0, 'CTT': 1.0, 'CTC': 0.35241301907968575, 'CTA': 0.21324354657687988, 'CTG': 0.8574635241301908, 'CCT': 0.8503649635036497, 'CCC': 0.13686131386861314, 'CCA': 0.7098540145985401, 'CCG': 1.0, 'CAT': 1.0, 'CAC': 0.5454545454545454, 'CAA': 1.0, 'CAG': 0.8766954377311961, 'CGT': 1.0, 'CGC': 0.8080133555926544, 'CGA': 0.3055091819699499, 'CGG': 0.3689482470784641, 'ATT': 1.0, 'ATC': 0.8729582577132485, 'ATA': 0.2713248638838475, 'ATG': 1.0, 'ACT': 0.537467700258398, 'ACC': 0.3591731266149871, 'ACA': 1.0, 'ACG': 0.6188630490956073, 'AAT': 0.9512534818941504, 'AAC': 1.0, 'AAA': 1.0, 'AAG': 0.38845291479820626, 'AGT': 0.416058394160584, 'AGC': 0.8759124087591241, 'AGA': 0.6160267111853088, 'AGG': 0.19031719532554256, 'GTT': 1.0, 'GTC': 0.6234413965087282, 'GTA': 0.7331670822942643, 'GTG': 0.697007481296758, 'GCT': 1.0, 'GCC': 0.5302857142857142, 'GCA': 0.8731428571428571, 'GCG': 0.6731428571428572, 'GAT': 1.0, 'GAC': 0.6340852130325814, 'GAA': 1.0, 'GAG': 0.5113098369279326, 'GGT': 0.7574193548387097, 'GGC': 0.9303225806451614, 'GGA': 1.0, 'GGG': 0.42709677419354847, 'TGA': 0.07894736842105263, 'TAA': 1.0, 'TAG': 0.19736842105263155}
b_w_exp = {'TTT': 1.0, 'TTC': 0.7539044013251301, 'TTA': 0.584193663225347, 'TTG': 0.4065503737985048, 'TCT': 1.0, 'TCC': 0.4194200944032367, 'TCA': 0.9055967633175995, 'TCG': 0.26163182737693863, 'TAT': 1.0, 'TAC': 0.7473435655253837, 'TGT': 0.7847769028871391, 'TGC': 1.0, 'TGG': 1.0, 'CTT': 1.0, 'CTC': 0.30473478106087576, 'CTA': 0.15165539337842648, 'CTG': 0.6724813100747598, 'CCT': 0.7554721701063165, 'CCC': 0.10694183864915573, 'CCA': 0.48905565978736715, 'CCG': 1.0, 'CAT': 1.0, 'CAC': 0.6933546837469976, 'CAA': 1.0, 'CAG': 0.8518907563025211, 'CGT': 1.0, 'CGC': 0.8850974930362117, 'CGA': 0.18523676880222842, 'CGG': 0.2729805013927577, 'ATT': 1.0, 'ATC': 0.8749627865436143, 'ATA': 0.14319738017267045, 'ATG': 1.0, 'ACT': 0.43652743652743653, 'ACC': 0.2285012285012285, 'ACA': 1.0, 'ACG': 0.5487305487305487, 'AAT': 0.8484279680900985, 'AAC': 1.0, 'AAA': 1.0, 'AAG': 0.3328405100720754, 'AGT': 0.3128792987188132, 'AGC': 0.8341200269723533, 'AGA': 0.6518105849582173, 'AGG': 0.11211699164345404, 'GTT': 1.0, 'GTC': 0.7051016175860639, 'GTA': 0.729987557030278, 'GTG': 0.7034425549564497, 'GCT': 0.9612530915086562, 'GCC': 0.5103050288540808, 'GCA': 1.0, 'GCG': 0.9109645507007419, 'GAT': 1.0, 'GAC': 0.6780946601941749, 'GAA': 1.0, 'GAG': 0.3877517057746714, 'GGT': 0.6493891151425397, 'GGC': 1.0, 'GGA': 0.873380229544613, 'GGG': 0.31580895964457606, 'TGA': 0.25339366515837103, 'TAA': 1.0, 'TAG': 0.15384615384615385}
e_wo_exp = {'TTT': 0.735593220338983, 'TTC': 1.0, 'TTA': 0.09501738122827345, 'TTG': 0.13789107763615296, 'TCT': 0.942857142857143, 'TCC': 0.8095238095238096, 'TCA': 0.2523809523809524, 'TCG': 0.30000000000000004, 'TAT': 0.7599999999999999, 'TAC': 1.0, 'TGT': 0.5857142857142857, 'TGC': 1.0, 'TGG': 1.0, 'CTT': 0.11935110081112398, 'CTC': 0.14947856315179606, 'CTA': 0.020857473928157587, 'CTG': 1.0, 'CCT': 0.23577235772357727, 'CCC': 0.0975609756097561, 'CCA': 0.2737127371273713, 'CCG': 1.0, 'CAT': 0.7272727272727272, 'CAC': 1.0, 'CAA': 0.4049382716049382, 'CAG': 1.0, 'CGT': 1.0, 'CGC': 0.6149162861491629, 'CGA': 0.04870624048706241, 'CGG': 0.0593607305936073, 'ATT': 0.6087751371115173, 'ATC': 1.0, 'ATA': 0.04570383912248629, 'ATG': 1.0, 'ACT': 0.6867816091954023, 'ACC': 1.0, 'ACA': 0.18103448275862066, 'ACG': 0.35919540229885055, 'AAT': 0.3863636363636363, 'AAC': 1.0, 'AAA': 1.0, 'AAG': 0.36474908200734396, 'AGT': 0.31428571428571433, 'AGC': 1.0, 'AGA': 0.028919330289193305, 'AGG': 0.0136986301369863, 'GTT': 1.0, 'GTC': 0.3365384615384615, 'GTA': 0.5538461538461539, 'GTG': 0.5788461538461539, 'GCT': 1.0, 'GCC': 0.5108695652173912, 'GCA': 0.7108695652173912, 'GCG': 0.8456521739130434, 'GAT': 0.9812206572769953, 'GAC': 1.0, 'GAA': 1.0, 'GAG': 0.37642585551330804, 'GGT': 1.0, 'GGC': 0.7787769784172662, 'GGA': 0.09892086330935251, 'GGG': 0.16546762589928057, 'TGA': 0.18918918918918917, 'TAA': 1.0, 'TAG': 0.027027027027027025}
e_w_exp = {'TTT': 0.6337509211495946, 'TTC': 1.0, 'TTA': 0.10819430814524043, 'TTG': 0.12414131501472031, 'TCT': 1.0, 'TCC': 0.8928571428571428, 'TCA': 0.28110599078341014, 'TCG': 0.3870967741935484, 'TAT': 0.7869565217391304, 'TAC': 1.0, 'TGT': 0.7492447129909365, 'TGC': 1.0, 'TGG': 1.0, 'CTT': 0.12217860647693818, 'CTC': 0.12978410206084398, 'CTA': 0.026741903827281647, 'CTG': 1.0, 'CCT': 0.2220205686630369, 'CCC': 0.08287961282516637, 'CCA': 0.26497277676951, 'CCG': 1.0, 'CAT': 0.6720496894409939, 'CAC': 1.0, 'CAA': 0.36744432661717924, 'CAG': 1.0, 'CGT': 1.0, 'CGC': 0.6551891367604268, 'CGA': 0.04655674102812803, 'CGG': 0.05722599418040737, 'ATT': 0.6644295302013422, 'ATC': 1.0, 'ATA': 0.04278523489932885, 'ATG': 1.0, 'ACT': 0.5441354292623942, 'ACC': 1.0, 'ACA': 0.14207980652962515, 'ACG': 0.3555018137847642, 'AAT': 0.3677130044843049, 'AAC': 1.0, 'AAA': 1.0, 'AAG': 0.2857631759069131, 'AGT': 0.3352534562211981, 'AGC': 0.9481566820276498, 'AGA': 0.022308438409311345, 'AGG': 0.00921435499515034, 'GTT': 1.0, 'GTC': 0.39360587002096437, 'GTA': 0.5277777777777778, 'GTG': 0.7657232704402516, 'GCT': 0.7956169604573606, 'GCC': 0.5778942353501668, 'GCA': 0.7241543592186757, 'GCG': 1.0, 'GAT': 1.0, 'GAC': 0.9653437674678591, 'GAA': 1.0, 'GAG': 0.36030534351145044, 'GGT': 1.0, 'GGC': 0.890840652446675, 'GGA': 0.09995817649519029, 'GGG': 0.16687578419071517, 'TGA': 0.19209039548022602, 'TAA': 1.0, 'TAG': 0.05084745762711865}

sequences = SeqIO.parse('only_cai_sequences', 'fasta')
seq_dict = {seq.description: relative_adaptiveness([str(seq.seq)]) for seq in sequences}
print(seq_dict)


sequences = SeqIO.parse('only_cai_sequences', 'fasta')
aa = translate(next(sequences).seq)
freq_dict = {key:value/len(aa) for key, value in dict(Counter(aa)).items()}
print(freq_dict)

print(seq_dict.keys())
df = pandas.DataFrame()
df['aa'] = freq_dict.keys()
df['counts'] = freq_dict.values()
print(df)
for seq_id, rel_adap in seq_dict.items():
    selected_codon = {translate(codon):codon for codon, weight in rel_adap.items() if weight ==1 and translate(codon) in list(freq_dict.keys())}
    selected_codon = [selected_codon[aa] for aa in freq_dict.keys()]
    # print(selected_codon)
    # print(selected_codon)
    # print( [translate(codon) for codon in selected_codon ])
    df[seq_id+'_codon'] = selected_codon
    df[seq_id+'_E_score'] = [round(e_w_exp[codon],2) for codon in selected_codon ]
    df[seq_id+'_B_score'] = [round(b_w_exp[codon],2) for codon in selected_codon ]

    final_val = {translate(codon): [codon,  round(e_w_exp[codon],2), round(b_w_exp[codon],2)] for codon in selected_codon}
    seq_dict[seq_id] = final_val

# final_df = pd.DataFrame(seq_dict)#.to_csv('analysis of results.csv')
# print(final_df)
print(df)
df.to_csv('analysis of differences between sequences.csv')